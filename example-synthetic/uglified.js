async function grabConfig(e,t,o,r,i){const u="US"==o?"https://api.newrelic.com/graphql":"https://api.eu.newrelic.com/graphql";"undefined"!=typeof $util&&$util.insights.set("configurator",r+"-"+e);o=await(async(e,t)=>{var c,a,o,e={url:u,method:"POST",headers:{"Content-Type":"application/json","API-Key":i,"NewRelic-Package-Id":r},body:JSON.stringify({query:e,variables:t})},t=(a=e=>e,"timeout"in(c=e)||(c.timeout=1e4),await new Promise((n,r)=>{$http(c,function(e,t,o){e?r(`Connection error on url '${c.url}'`):200!=t.statusCode?(console.log(t.body),r("API did not respond with a 200 OK, got "+t.statusCode)):n(a(o,t,e))})}));let n={};try{return(n=null===(o=t)||"function"!=typeof o&&"object"!=typeof o?JSON.parse(t):t).errors&&0<n.errors.length&&(GQL_ERROR_DETECTED=!0,console.log("!! GQL Query error detected:",n.errors)),n}catch(e){console.log("Error: Response from New Relic failed to parse as JSON.",e)}})('query($accountId: Int!, $documentId: String!) {actor {account(id: $accountId){nerdStorage{document(collection: "SyntheticConfigurator",documentId:$documentId)}}}}',{accountId:parseInt(t),documentId:e});return JSON.parse(o.data.actor.account.nerdStorage.document.config)}