async function grabConfig(e,o,t,n,i){var u;void 0===u&&(u=require("request"));const d="US"==t?"https://api.newrelic.com/graphql":"https://api.eu.newrelic.com/graphql";"undefined"!=typeof $util&&$util.insights.set("configurator",n+"-"+e);t=await(async(e,o)=>{var c,a,t,e={url:d,method:"POST",headers:{"Content-Type":"application/json","API-Key":i,"NewRelic-Package-Id":n},body:JSON.stringify({query:e,variables:o})},o=(a=e=>e,"timeout"in(c=e)||(c.timeout=1e4),await new Promise((r,n)=>{u(c,function(e,o,t){e?n(`Connection error on url '${c.url}'`):200!=o.statusCode?(console.log(o.body),n("API did not respond with a 200 OK, got "+o.statusCode)):r(a(t,o,e))})}));let r={};try{return(r=null===(t=o)||"function"!=typeof t&&"object"!=typeof t?JSON.parse(o):o).errors&&0<r.errors.length&&(GQL_ERROR_DETECTED=!0,console.log("!! GQL Query error detected:",r.errors)),r}catch(e){console.log("Error: Response from New Relic failed to parse as JSON.",e)}})('query($accountId: Int!, $documentId: String!) {actor {account(id: $accountId){nerdStorage{document(collection: "SyntheticConfigurator",documentId:$documentId)}}}}',{accountId:parseInt(o),documentId:e});return JSON.parse(t.data.actor.account.nerdStorage.document.config)}